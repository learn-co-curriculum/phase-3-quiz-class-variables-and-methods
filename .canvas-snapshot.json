{
  "quiz": {
    "id": 19080,
    "title": "Class Variables and Methods Quiz",
    "html_url": "https://learning.flatironschool.com/courses/3299/quizzes/19080",
    "mobile_url": "https://learning.flatironschool.com/courses/3299/quizzes/19080?force_user=1&persist_headless=1",
    "description": "<div>\n<div><span>It's time to check your knowledge! Use this quiz to create a custom study guide. Note any answers that were marked incorrect, so you can study the relevant material and try this quiz again.</span></div>\n<br>\n<div><span>If you don't know the answer to a question, please do not guess. Instead, select \"I don't know\". It's OK not to know everything and to admit when we're unsure.</span></div>\n</div>",
    "quiz_type": "assignment",
    "time_limit": null,
    "timer_autosubmit_disabled": false,
    "shuffle_answers": true,
    "show_correct_answers": true,
    "scoring_policy": "keep_highest",
    "allowed_attempts": 3,
    "one_question_at_a_time": true,
    "question_count": 10,
    "points_possible": 10.0,
    "cant_go_back": false,
    "access_code": null,
    "ip_filter": null,
    "due_at": null,
    "lock_at": null,
    "unlock_at": null,
    "published": false,
    "unpublishable": true,
    "locked_for_user": true,
    "lock_info": {
      "missing_permission": "participate_as_student",
      "asset_string": "quizzes:quiz_19080"
    },
    "lock_explanation": "This quiz is currently locked.",
    "hide_results": null,
    "show_correct_answers_at": null,
    "hide_correct_answers_at": null,
    "all_dates": [
      {
        "due_at": null,
        "unlock_at": null,
        "lock_at": null,
        "base": true
      }
    ],
    "can_unpublish": true,
    "can_update": true,
    "require_lockdown_browser": false,
    "require_lockdown_browser_for_results": false,
    "require_lockdown_browser_monitor": false,
    "lockdown_browser_monitor_data": "",
    "speed_grader_url": null,
    "permissions": {
      "manage": true,
      "read": true,
      "create": true,
      "update": true,
      "submit": true,
      "preview": true,
      "delete": true,
      "read_statistics": true,
      "grade": true,
      "review_grades": true,
      "view_answer_audits": true
    },
    "quiz_reports_url": "https://learning.flatironschool.com/api/v1/courses/3299/quizzes/19080/reports",
    "quiz_statistics_url": "https://learning.flatironschool.com/api/v1/courses/3299/quizzes/19080/statistics",
    "message_students_url": "https://learning.flatironschool.com/api/v1/courses/3299/quizzes/19080/submission_users/message",
    "section_count": 1,
    "important_dates": false,
    "quiz_submission_versions_html_url": "https://learning.flatironschool.com/courses/3299/quizzes/19080/submission_versions",
    "assignment_id": 129338,
    "one_time_results": false,
    "only_visible_to_overrides": false,
    "assignment_group_id": 6376,
    "show_correct_answers_last_attempt": true,
    "version_number": 4,
    "has_access_code": false,
    "post_to_sis": false,
    "migration_id": "g4265bfbd8875f14706c13b0e44f690e3",
    "question_types": [
      "multiple_choice_question",
      "multiple_answers_question"
    ]
  },
  "questions": [
    {
      "quiz_id": 19080,
      "id": 120464,
      "quiz_group_id": null,
      "assessment_question_id": 135541,
      "position": null,
      "question_name": "OO Syntax",
      "question_type": "multiple_choice_question",
      "question_text": "<p>Classes are <strong>NOT</strong> objects</p>",
      "points_possible": 1.0,
      "correct_comments": "",
      "incorrect_comments": "",
      "neutral_comments": "",
      "correct_comments_html": "",
      "incorrect_comments_html": "",
      "neutral_comments_html": "<strong>Source/s</strong>: <a title=\"Class Variables and Class Methods\" href=\"/courses/3299/pages/class-variables-and-class-methods\" target=\"_blank\">Class Variables and Class Methods</a>",
      "answers": [
        {
          "id": 9762,
          "text": "False",
          "html": "",
          "comments": "",
          "comments_html": "Yes! If our definition of an object is a bundle of code that contains attributes and behaviors, then an entire class itself qualifies as an object.",
          "weight": 100.0
        },
        {
          "id": 5789,
          "text": "True",
          "html": "",
          "comments": "",
          "comments_html": "You might want to review the source/s for this question.",
          "weight": 0.0
        },
        {
          "id": 8031,
          "text": "I don't know.",
          "html": "",
          "comments": "",
          "comments_html": "Be sure to study the source/s for this question. You'll get it next time.",
          "weight": 0.0
        }
      ],
      "variables": null,
      "formulas": null,
      "answer_tolerance": null,
      "formula_decimal_places": null,
      "matches": null,
      "matching_answer_incorrect_matches": null
    },
    {
      "quiz_id": 19080,
      "id": 120465,
      "quiz_group_id": null,
      "assessment_question_id": 135542,
      "position": null,
      "question_name": "OO Syntax",
      "question_type": "multiple_choice_question",
      "question_text": "<p><span>What type of scope does a <strong>class variable</strong> have?</span></p>",
      "points_possible": 1.0,
      "correct_comments": "",
      "incorrect_comments": "",
      "neutral_comments": "",
      "correct_comments_html": "",
      "incorrect_comments_html": "",
      "neutral_comments_html": "<strong>Source/s</strong>: <a title=\"Class Variables and Class Methods\" href=\"/courses/3299/pages/class-variables-and-class-methods\" target=\"_blank\">Class Variables and Class Methods</a>",
      "answers": [
        {
          "id": 2921,
          "text": "Class",
          "html": "",
          "comments": "",
          "comments_html": "Exactly! A class variable is accessible to the whole class and is unique to the class itself.",
          "weight": 100.0
        },
        {
          "id": 6461,
          "text": "Local",
          "html": "",
          "comments": "",
          "comments_html": "Local scope is used to describe variables declared in a specific scope, such as in methods. They are only available within that scope.",
          "weight": 0.0
        },
        {
          "id": 3270,
          "text": "Global",
          "html": "",
          "comments": "",
          "comments_html": "Global variables are declared with <code>$</code> and are available everywhere.",
          "weight": 0.0
        },
        {
          "id": 7131,
          "text": "Instance",
          "html": "",
          "comments": "",
          "comments_html": "<p><em></em>Instance variables belong to specific instances/objects of a class and are declared with <code>@</code>.</p>",
          "weight": 0.0
        },
        {
          "id": 5780,
          "text": "I don't know.",
          "html": "",
          "comments": "",
          "comments_html": "Be sure to study the source/s for this question. You'll get it next time.",
          "weight": 0.0
        }
      ],
      "variables": null,
      "formulas": null,
      "answer_tolerance": null,
      "formula_decimal_places": null,
      "matches": null,
      "matching_answer_incorrect_matches": null
    },
    {
      "quiz_id": 19080,
      "id": 120466,
      "quiz_group_id": null,
      "assessment_question_id": 135543,
      "position": null,
      "question_name": "OO Syntax",
      "question_type": "multiple_choice_question",
      "question_text": "<p><span>What is the syntax for a class variable?</span></p>",
      "points_possible": 1.0,
      "correct_comments": "",
      "incorrect_comments": "",
      "neutral_comments": "",
      "correct_comments_html": "",
      "incorrect_comments_html": "",
      "neutral_comments_html": "<strong>Source/s</strong>: <a title=\"Class Variables and Class Methods\" href=\"/courses/3299/pages/class-variables-and-class-methods\" target=\"_blank\">Class Variables and Class Methods</a>",
      "answers": [
        {
          "id": 4529,
          "text": "",
          "html": "<pre><span>@@variable_name</span></pre>",
          "comments": "",
          "comments_html": "Correct! We use <code>@@</code> to declare class variables.",
          "weight": 100.0
        },
        {
          "id": 5784,
          "text": "",
          "html": "<pre><span>@variable_name</span></pre>",
          "comments": "",
          "comments_html": "This is how we declare instance variables.",
          "weight": 0.0
        },
        {
          "id": 1890,
          "text": "",
          "html": "<pre><span>$variable_name</span></pre>",
          "comments": "",
          "comments_html": "This is how we declare global variables.",
          "weight": 0.0
        },
        {
          "id": 4912,
          "text": "",
          "html": "<pre><span>VARIABLE_NAME</span></pre>",
          "comments": "",
          "comments_html": "This is how we declare a class constant.",
          "weight": 0.0
        },
        {
          "id": 9603,
          "text": "I don't know",
          "html": "",
          "comments": "",
          "comments_html": "B<span style=\"font-family: inherit; font-size: 1rem;\">e sure to study the source/s for this question. You'll get it next time.</span>",
          "weight": 0.0
        }
      ],
      "variables": null,
      "formulas": null,
      "answer_tolerance": null,
      "formula_decimal_places": null,
      "matches": null,
      "matching_answer_incorrect_matches": null
    },
    {
      "quiz_id": 19080,
      "id": 120467,
      "quiz_group_id": null,
      "assessment_question_id": 135544,
      "position": null,
      "question_name": "OO Syntax",
      "question_type": "multiple_choice_question",
      "question_text": "<p>Consider the following code:</p>\n<pre><code>\nclass MyClass\n  def self.class_method_name\n    # some code\n  end\nend\n</code></pre>\n<p>In this code sample, what does the keyword<span>&nbsp;</span><code>self</code><span>&nbsp;</span>refer to?</p>",
      "points_possible": 1.0,
      "correct_comments": "",
      "incorrect_comments": "",
      "neutral_comments": "",
      "correct_comments_html": "",
      "incorrect_comments_html": "",
      "neutral_comments_html": "<strong>Source/s</strong>: <a title=\"Class Variables and Class Methods\" href=\"/courses/3299/pages/class-variables-and-class-methods\" target=\"_blank\">Class Variables and Class Methods</a>",
      "answers": [
        {
          "id": 182,
          "text": "The entire class itself",
          "html": "",
          "comments": "",
          "comments_html": "Perfect! <code>self</code> is being used inside the class itself, so it refers to the class.",
          "weight": 100.0
        },
        {
          "id": 7655,
          "text": "An instance of the class",
          "html": "",
          "comments": "",
          "comments_html": "Where is <code>self</code> being used? Is it inside an instance method or inside the class?",
          "weight": 0.0
        },
        {
          "id": 545,
          "text": "Global scope",
          "html": "",
          "comments": "",
          "comments_html": "Where is <code>self</code> being used? Is it inside the class or just floating around in the file not nested in any other code?",
          "weight": 0.0
        },
        {
          "id": 9087,
          "text": "I don't know.",
          "html": "",
          "comments": "",
          "comments_html": "Be sure to study the source/s for this question. You'll get it next time.",
          "weight": 0.0
        }
      ],
      "variables": null,
      "formulas": null,
      "answer_tolerance": null,
      "formula_decimal_places": null,
      "matches": null,
      "matching_answer_incorrect_matches": null
    },
    {
      "quiz_id": 19080,
      "id": 120468,
      "quiz_group_id": null,
      "assessment_question_id": 135545,
      "position": null,
      "question_name": "OO Syntax",
      "question_type": "multiple_choice_question",
      "question_text": "<p><span>Private methods can only be called within the context of the defining class. The receiver of a private method is always&nbsp;</span><code>self</code>.</p>",
      "points_possible": 1.0,
      "correct_comments": "",
      "incorrect_comments": "",
      "neutral_comments": "",
      "correct_comments_html": "",
      "incorrect_comments_html": "",
      "neutral_comments_html": "<p><strong>Source/s</strong>: <a title=\"Private Methods\" href=\"https://learning.flatironschool.com/courses/3299/pages/private-methods\">Private Methods</a></p>",
      "answers": [
        {
          "id": 9132,
          "text": "True",
          "html": "",
          "comments": "",
          "comments_html": "Fantastic! We can't call private methods on objects outside of a class, but we can call them on <code>self</code> within a class.",
          "weight": 100.0
        },
        {
          "id": 4714,
          "text": "False",
          "html": "",
          "comments": "",
          "comments_html": "Try opening up a Ruby REPL and defining a class with a private method. Try calling that private method inside of the class on <code>self</code>, and then outside of the class on an object instantiated from that class. What happens?",
          "weight": 0.0
        },
        {
          "id": 194,
          "text": "I don't know.",
          "html": "",
          "comments": "",
          "comments_html": "Be sure to study the source/s for this question. You'll get it next time.",
          "weight": 0.0
        }
      ],
      "variables": null,
      "formulas": null,
      "answer_tolerance": null,
      "formula_decimal_places": null,
      "matches": null,
      "matching_answer_incorrect_matches": null
    },
    {
      "quiz_id": 19080,
      "id": 120469,
      "quiz_group_id": null,
      "assessment_question_id": 135546,
      "position": null,
      "question_name": "OO Syntax",
      "question_type": "multiple_choice_question",
      "question_text": "<p>To declare private methods, we usually type <code>private</code> and then declare all of our private methods below that.</p>",
      "points_possible": 1.0,
      "correct_comments": "",
      "incorrect_comments": "",
      "neutral_comments": "",
      "correct_comments_html": "",
      "incorrect_comments_html": "",
      "neutral_comments_html": "<p><strong>Source/s</strong><span>:&nbsp;</span><a title=\"Private Methods\" href=\"https://learning.flatironschool.com/courses/3299/pages/private-methods\">Private Methods</a></p>",
      "answers": [
        {
          "id": 4150,
          "text": "True",
          "html": "",
          "comments": "",
          "comments_html": "Correct! We only need to type <code>private</code> once, and then declare the private methods below that. The only exception to this rule is that we don't declare <code>initialize</code> under <code>private</code>.",
          "weight": 100.0
        },
        {
          "id": 1906,
          "text": "False",
          "html": "",
          "comments": "",
          "comments_html": "We need to tell Ruby that these methods are private, so the <code>private</code> method is required. We only need to call it once.",
          "weight": 0.0
        },
        {
          "id": 4519,
          "text": "I don't know.",
          "html": "",
          "comments": "",
          "comments_html": "Be sure to study the source/s for this question. You'll get it next time.",
          "weight": 0.0
        }
      ],
      "variables": null,
      "formulas": null,
      "answer_tolerance": null,
      "formula_decimal_places": null,
      "matches": null,
      "matching_answer_incorrect_matches": null
    },
    {
      "quiz_id": 19080,
      "id": 120470,
      "quiz_group_id": null,
      "assessment_question_id": 135547,
      "position": null,
      "question_name": "OO Concepts",
      "question_type": "multiple_answers_question",
      "question_text": "<p><span>Why do we declare private methods? (Select all that apply)</span></p>",
      "points_possible": 1.0,
      "correct_comments": "",
      "incorrect_comments": "",
      "neutral_comments": "",
      "correct_comments_html": "",
      "incorrect_comments_html": "",
      "neutral_comments_html": "<p><strong>Source/s</strong><span>:&nbsp;</span><a title=\"Private Methods\" href=\"https://learning.flatironschool.com/courses/3299/pages/private-methods\">Private Methods</a></p>",
      "answers": [
        {
          "id": "5892",
          "text": "They signal to other developers that these are dependencies for other methods in the class.",
          "comments": "",
          "comments_html": "Yes! We often declare helper methods that don't need to be accessed outside of the class as private methods.",
          "weight": 100.0
        },
        {
          "id": "1333",
          "text": "They encapsulate functionality that doesn't need to be exposed or accessed outside of the class, like how we tell a bartender to make a drink, but don't include step-by-step instructions on making it.",
          "comments": "",
          "comments_html": "So true! Any functionality that doesn't need to be accessed outside of a class can be safely tucked away in a private method. Exposing only those methods developers need to work with can protect the data in your class and make your code easier to work with.",
          "weight": 100.0
        },
        {
          "id": "8380",
          "text": "They signal to other developers that these methods are okay to remove in the future, because they're not really needed.",
          "comments": "",
          "comments_html": "Private methods are often helper methods that other public methods rely on. Deleting them could be quite disastrous.",
          "weight": 0.0
        },
        {
          "id": "5414",
          "text": "I don't know.",
          "comments": "",
          "comments_html": "Be sure to study the source/s for this question. You'll get it next time.",
          "weight": 0.0
        }
      ],
      "variables": null,
      "formulas": null,
      "answer_tolerance": null,
      "formula_decimal_places": null,
      "matches": null,
      "matching_answer_incorrect_matches": null
    },
    {
      "quiz_id": 19080,
      "id": 120472,
      "quiz_group_id": null,
      "assessment_question_id": 135549,
      "position": null,
      "question_name": "OO Syntax",
      "question_type": "multiple_choice_question",
      "question_text": "<p><span>What type of constant is defined within a class and is available to all instances of a particular class?</span></p>",
      "points_possible": 1.0,
      "correct_comments": "",
      "incorrect_comments": "",
      "neutral_comments": "",
      "correct_comments_html": "",
      "incorrect_comments_html": "",
      "neutral_comments_html": "<p><strong>Source/s</strong>: <a title=\"Class Constants\" href=\"https://learning.flatironschool.com/courses/3299/assignments/74045\">Class Constants</a></p>",
      "answers": [
        {
          "id": 1080,
          "text": "Class",
          "html": "",
          "comments": "",
          "comments_html": "Amazing! Class constants have the same value no matter which instance is accessing it. It is a shared constant and is also accessible inside of class methods.",
          "weight": 100.0
        },
        {
          "id": 4868,
          "text": "Global",
          "html": "",
          "comments": "",
          "comments_html": "A global constant would be available to all class instances, not just a single class. It would also be available to methods outside of classes, and, well, everywhere.",
          "weight": 0.0
        },
        {
          "id": 2586,
          "text": "Instance",
          "html": "",
          "comments": "",
          "comments_html": "We don't declare constants inside of instance methods. What kind of constant might we need if we want all of the instances of a class to have access to the same value?",
          "weight": 0.0
        },
        {
          "id": 2500,
          "text": "I don't know",
          "html": "",
          "comments": "",
          "comments_html": "Be sure to study the source/s for this question. You'll get it next time.",
          "weight": 0.0
        }
      ],
      "variables": null,
      "formulas": null,
      "answer_tolerance": null,
      "formula_decimal_places": null,
      "matches": null,
      "matching_answer_incorrect_matches": null
    },
    {
      "quiz_id": 19080,
      "id": 120473,
      "quiz_group_id": null,
      "assessment_question_id": 135550,
      "position": null,
      "question_name": "OO Syntax",
      "question_type": "multiple_choice_question",
      "question_text": "<p><span>To create a class constant, what syntax should be used?</span></p>",
      "points_possible": 1.0,
      "correct_comments": "",
      "incorrect_comments": "",
      "neutral_comments": "",
      "correct_comments_html": "",
      "incorrect_comments_html": "",
      "neutral_comments_html": "<p><strong>Source/s</strong>: <a title=\"Class Constants\" href=\"https://learning.flatironschool.com/courses/3299/assignments/74045\">Class Constants</a></p>",
      "answers": [
        {
          "id": 104,
          "text": "VARIABLE_NAME",
          "html": "",
          "comments": "",
          "comments_html": "Exactly! All caps and snake case is the way to go. We'd also declare it outside of any methods.",
          "weight": 100.0
        },
        {
          "id": 9336,
          "text": "@variable_name",
          "html": "",
          "comments": "",
          "comments_html": "This is how we declare instance variables. You might want to review the source/s for this question.",
          "weight": 0.0
        },
        {
          "id": 9244,
          "text": "@@variable_name",
          "html": "",
          "comments": "",
          "comments_html": "This is how we declare class variables. You might want to review the source/s for this question.",
          "weight": 0.0
        },
        {
          "id": 2712,
          "text": "I don't know",
          "html": "",
          "comments": "",
          "comments_html": "Be sure to study the source/s for this question. You'll get it next time.",
          "weight": 0.0
        }
      ],
      "variables": null,
      "formulas": null,
      "answer_tolerance": null,
      "formula_decimal_places": null,
      "matches": null,
      "matching_answer_incorrect_matches": null
    },
    {
      "quiz_id": 19080,
      "id": 120474,
      "quiz_group_id": null,
      "assessment_question_id": 135551,
      "position": null,
      "question_name": "OO Syntax",
      "question_type": "multiple_choice_question",
      "question_text": "<p>Consider the following code:</p>\n<pre><code>\nclass Book\n  attr_accessor :author, :page_count, :genre\n  attr_reader :title\n\n  GENRES = []\n\n  def initialize(title)\n    @title = title\n  end\n\n  def self.genres\n    GENRES\n  end\nend\n</code></pre>\n<p>Every time a genre is added to a Book object, we want to store that genre in the class constant <code>GENRES</code>. The code above doesn't currently do this. Select the code snippet that does.</p>",
      "points_possible": 1.0,
      "correct_comments": "",
      "incorrect_comments": "",
      "neutral_comments": "",
      "correct_comments_html": "",
      "incorrect_comments_html": "",
      "neutral_comments_html": "<p><strong>Source/s</strong>: <a title=\"Class Constants\" href=\"https://learning.flatironschool.com/courses/3299/assignments/74045\">Class Constants</a></p>",
      "answers": [
        {
          "id": 4720,
          "text": "",
          "html": "<pre><code>\nclass Book\n  attr_accessor :author, :page_count\n  attr_reader :title\n\n  GENRES = []\n\n  def initialize(title)\n    @title = title\n  end\n\n  def genre=(genre)\n    @genre = genre\n    GENRES &lt;&lt; genre\n  end\n\n  def self.genres\n    GENRES\n  end\nend\n</code></pre>",
          "comments": "",
          "comments_html": "Wow! Nailed it!! By creating a setter and adding the genre to <code>GENRES</code> in the setter, we achieve exactly what we want.",
          "weight": 100.0
        },
        {
          "id": 4386,
          "text": "",
          "html": "<pre><code>\nclass Book\n  attr_accessor :author, :page_count, :genre\n  attr_reader :title\n\n  GENRES = []\n\n  def initialize(title)\n    @title = title\n    GENRES &lt;&lt; self\n  end\n\n  def self.genres\n    GENRES\n  end\nend\n</code>\n</pre>",
          "comments": "",
          "comments_html": "This isn't actually adding the genre to <code>GENRES</code>. What is the code actually adding, and what should it be doing instead?",
          "weight": 0.0
        },
        {
          "id": 5155,
          "text": "",
          "html": "<pre><code>\nclass Book\n  attr_accessor :author, :page_count\n  attr_reader :title\n  attr_writer :genre\n\n  GENRES = []\n\n  def initialize(title)\n    @title = title\n  end\n\n  def genre\n    GENRES &lt;&lt; @genre\n  end\n\n  def self.genres\n    GENRES\n  end\nend\n</code>\n</pre>",
          "comments": "",
          "comments_html": "This is a bit of a weird one, and not quite right. When is the genre being added to <code>GENRES</code>? What will happen every time you try to read the <code>genre</code> property on an object? If you're not sure, try running the code, adding a genre, and then reading the genre a few times before running <code>Book.genres</code>.",
          "weight": 0.0
        },
        {
          "id": 2477,
          "text": "I don't know.",
          "html": "",
          "comments": "",
          "comments_html": "Be sure to study the source/s for this question. You'll get it next time.",
          "weight": 0.0
        }
      ],
      "variables": null,
      "formulas": null,
      "answer_tolerance": null,
      "formula_decimal_places": null,
      "matches": null,
      "matching_answer_incorrect_matches": null
    }
  ]
}